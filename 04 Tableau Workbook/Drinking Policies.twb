<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0308.1149                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Random breath testing - Copy.reformatted' inline='true' name='textscan.42129.004101307873' version='8.3'>
      <connection class='textscan' directory='C:/Users/Leon/Documents/DataVisualization/Final/0 Doc/Drinking policies' filename='Random breath testing - Copy.reformatted.csv'>
        <relation name='Random breath testing - Copy.reformatted#csv' table='[Random breath testing - Copy.reformatted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Random_breath_testing_RBT_use' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Random breath testing - Copy.reformatted#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Random breath testing - Copy.reformatted#csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Random_breath_testing_RBT_use</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Random_breath_testing_RBT_use]</local-name>
            <parent-name>[Random breath testing - Copy.reformatted#csv]</parent-name>
            <remote-alias>Random_breath_testing_RBT_use</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Random breath testing - Copy.reformatted#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Random breath testing RBT use' datatype='string' name='[Random_breath_testing_RBT_use]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Random_breath_testing_RBT_use]' derivation='None' name='[none:Random_breath_testing_RBT_use:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Random_breath_testing_RBT_use:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Penalties for drink driving - Copy.reformatted' inline='true' name='textscan.42129.002431342589' version='8.3'>
      <connection class='textscan' directory='C:/Users/Leon/Documents/DataVisualization/Final/0 Doc/Drinking policies' filename='Penalties for drink driving - Copy.reformatted.csv'>
        <relation name='Penalties for drink driving - Copy.reformatted#csv' table='[Penalties for drink driving - Copy.reformatted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Community_service' ordinal='2' />
            <column datatype='string' name='Detention_short_or_long_term' ordinal='3' />
            <column datatype='string' name='Fines' ordinal='4' />
            <column datatype='string' name='Ignition_interlocks_alcolocks_' ordinal='5' />
            <column datatype='string' name='License_suspended_revoked' ordinal='6' />
            <column datatype='string' name='Mandatory_treatment' ordinal='7' />
            <column datatype='string' name='Penalty_points' ordinal='8' />
            <column datatype='string' name='Vehicle_impounded' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Community_service</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Community_service]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Community_service</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Detention_short_or_long_term</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Detention_short_or_long_term]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Detention_short_or_long_term</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fines]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Fines</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ignition_interlocks_alcolocks_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ignition_interlocks_alcolocks_]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Ignition_interlocks_alcolocks_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>License_suspended_revoked</remote-name>
            <remote-type>129</remote-type>
            <local-name>[License_suspended_revoked]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>License_suspended_revoked</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mandatory_treatment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mandatory_treatment]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Mandatory_treatment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Penalty_points</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Penalty_points]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Penalty_points</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle_impounded</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle_impounded]</local-name>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias>Vehicle_impounded</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Penalties for drink driving - Copy.reformatted#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
      </column>
      <column caption='Community service' datatype='string' name='[Community_service]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Detention short or long term' datatype='string' name='[Detention_short_or_long_term]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Fines]' role='dimension' type='nominal'>
      </column>
      <column caption='Ignition interlocks alcolocks' datatype='string' name='[Ignition_interlocks_alcolocks_]' role='dimension' type='nominal'>
      </column>
      <column caption='License suspended revoked' datatype='string' name='[License_suspended_revoked]' role='dimension' type='nominal'>
      </column>
      <column caption='Mandatory treatment' datatype='string' name='[Mandatory_treatment]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Penalty points' datatype='string' name='[Penalty_points]' role='dimension' type='nominal'>
      </column>
      <column caption='Vehicle impounded' datatype='string' name='[Vehicle_impounded]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[Fines]' derivation='None' name='[none:Fines:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Fines:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Legal-BAC-limits - Copy.reformatted' inline='true' name='textscan.42129.002204050928' version='8.3'>
      <connection class='textscan' directory='C:/Users/Leon/Documents/DataVisualization/Final/0 Doc/Drinking policies' filename='Legal-BAC-limits - Copy.reformatted.csv'>
        <relation name='Legal-BAC-limits - Copy.reformatted#csv' table='[Legal-BAC-limits - Copy.reformatted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='General_population' ordinal='2' />
            <column datatype='real' name='Young_novice_drivers' ordinal='3' />
            <column datatype='real' name='commercial_drivers' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>General_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[General_population]</local-name>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias>General_population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Young_novice_drivers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Young_novice_drivers]</local-name>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias>Young_novice_drivers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commercial_drivers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[commercial_drivers]</local-name>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias>commercial_drivers</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Legal-BAC-limits - Copy.reformatted#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Population of adults' datatype='real' name='[Calculation_3530509223025766]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) - SUM([textscan.42129.004219398150].[Population])* SUM([Young_novice_drivers])' scope-isolation='false' />
      </column>
      <column caption='Young Drivers' datatype='real' name='[Calculation_6620509203235167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Young_novice_drivers])*SUM([General_population])' scope-isolation='false' />
      </column>
      <column caption='Population of young drivers' datatype='real' name='[Calculation_7170509222017039]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) * SUM([Young_novice_drivers])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='General population' datatype='real' name='[General_population]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative'>
      </column>
      <column caption='Young novice drivers' datatype='real' name='[Young_novice_drivers]' role='measure' type='quantitative'>
      </column>
      <column caption='Commercial Drivers' datatype='real' name='[commercial_drivers]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[General_population]' derivation='Sum' name='[sum:General_population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3530509223025766]' derivation='User' name='[usr:Calculation_3530509223025766:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7170509222017039]' derivation='User' name='[usr:Calculation_7170509222017039:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434146' measure-ordering='alphabetic' measure-percentage='0.434146' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42129.002204050928]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42129.002204050928].[sum:General_population:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42129.002204050928].[usr:Calculation_3530509223025766:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='textscan.42129.002431342589'>
        <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
        </column>
        <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='textscan.42129.004219398150'>
        <column datatype='integer' name='[Population]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='COUNTRY (C##CS329E_LAR2478)' inline='true' name='oracle.42133.885408796297' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_LAR2478' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_lar2478'>
        <relation name='COUNTRY' table='[C##CS329E_LAR2478].[COUNTRY]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>38</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>24</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPULATION</remote-name>
            <remote-type>131</remote-type>
            <local-name>[POPULATION]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>POPULATION</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AREA</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AREA]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>AREA</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POPDENSITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[POPDENSITY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>POPDENSITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COASTLINE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COASTLINE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>COASTLINE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NETMIGRATION</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NETMIGRATION]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>NETMIGRATION</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INFANTMORTALITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[INFANTMORTALITY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>INFANTMORTALITY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>131</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXCHANGEPERDOLLAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[EXCHANGEPERDOLLAR]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>EXCHANGEPERDOLLAR</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CURRENCY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CURRENCY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>CURRENCY</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LITERACY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LITERACY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>LITERACY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PHONES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PHONES]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>PHONES</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>7</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARABLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ARABLE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>ARABLE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CROPS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CROPS]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>CROPS</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OTHER</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OTHER]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>OTHER</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLIMATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLIMATE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>CLIMATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BIRTHRATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BIRTHRATE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>BIRTHRATE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEATHRATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DEATHRATE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>DEATHRATE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGRICULTURE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AGRICULTURE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>AGRICULTURE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDUSTRY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[INDUSTRY]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>INDUSTRY</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SERVICE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SERVICE]</local-name>
            <parent-name>[COUNTRY]</parent-name>
            <remote-alias>SERVICE</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>3</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Agriculture' datatype='real' name='[AGRICULTURE]' role='measure' type='quantitative'>
      </column>
      <column caption='Arable' datatype='real' name='[ARABLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Area' datatype='integer' name='[AREA]' role='measure' type='quantitative'>
      </column>
      <column caption='Birthrate' datatype='real' name='[BIRTHRATE]' role='measure' type='quantitative'>
      </column>
      <column caption='Climate' datatype='real' name='[CLIMATE]' role='measure' type='quantitative'>
      </column>
      <column caption='Coastline' datatype='real' name='[COASTLINE]' role='measure' type='quantitative'>
      </column>
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' type='nominal'>
      </column>
      <column caption='Crops' datatype='real' name='[CROPS]' role='measure' type='quantitative'>
      </column>
      <column caption='Currency' datatype='string' name='[CURRENCY]' role='dimension' type='nominal'>
      </column>
      <column caption='Deathrate' datatype='real' name='[DEATHRATE]' role='measure' type='quantitative'>
      </column>
      <column caption='Exchangeperdollar' datatype='real' name='[EXCHANGEPERDOLLAR]' role='measure' type='quantitative'>
      </column>
      <column caption='Industry' datatype='real' name='[INDUSTRY]' role='measure' type='quantitative'>
      </column>
      <column caption='Infantmortality' datatype='real' name='[INFANTMORTALITY]' role='measure' type='quantitative'>
      </column>
      <column caption='Literacy' datatype='real' name='[LITERACY]' role='measure' type='quantitative'>
      </column>
      <column caption='Netmigration' datatype='real' name='[NETMIGRATION]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Other' datatype='real' name='[OTHER]' role='measure' type='quantitative'>
      </column>
      <column caption='Phones' datatype='real' name='[PHONES]' role='measure' type='quantitative'>
      </column>
      <column caption='Popdensity' datatype='real' name='[POPDENSITY]' role='measure' type='quantitative'>
      </column>
      <column caption='Population' datatype='integer' name='[POPULATION]' role='measure' type='quantitative'>
      </column>
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal'>
      </column>
      <column caption='Service' datatype='real' name='[SERVICE]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sobriety checkpoints - Copy.reformatted' inline='true' name='textscan.42129.004219398150' version='8.3'>
      <connection class='textscan' directory='C:/Users/Leon/Documents/DataVisualization/Final/0 Doc/Drinking policies' filename='Sobriety checkpoints - Copy.reformatted.csv'>
        <relation name='Sobriety checkpoints - Copy.reformatted#csv' table='[Sobriety checkpoints - Copy.reformatted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='integer' name='Population' ordinal='3' />
            <column datatype='integer' name='Areasqmi' ordinal='4' />
            <column datatype='real' name='PopDensitypersqmi' ordinal='5' />
            <column datatype='real' name='Coastline coast-area ratio' ordinal='6' />
            <column datatype='real' name='Netmigration' ordinal='7' />
            <column datatype='real' name='Infantmortalityper1000births' ordinal='8' />
            <column datatype='integer' name='GDP-percapita' ordinal='9' />
            <column datatype='real' name='LiteracyPercent' ordinal='10' />
            <column datatype='real' name='Phonesper1000' ordinal='11' />
            <column datatype='real' name='Arable-percent' ordinal='12' />
            <column datatype='real' name='Crops-percent' ordinal='13' />
            <column datatype='real' name='Other-percent' ordinal='14' />
            <column datatype='real' name='Climate' ordinal='15' />
            <column datatype='real' name='Birthrate' ordinal='16' />
            <column datatype='real' name='Deathrate' ordinal='17' />
            <column datatype='real' name='Agriculture' ordinal='18' />
            <column datatype='real' name='Industry' ordinal='19' />
            <column datatype='real' name='Service' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Areasqmi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Areasqmi]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Areasqmi</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopDensitypersqmi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PopDensitypersqmi]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>PopDensitypersqmi</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline coast-area ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coastline coast-area ratio]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Coastline coast-area ratio</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netmigration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netmigration]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Netmigration</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infantmortalityper1000births</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infantmortalityper1000births]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Infantmortalityper1000births</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP-percapita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP-percapita]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>GDP-percapita</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LiteracyPercent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LiteracyPercent]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>LiteracyPercent</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phonesper1000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phonesper1000]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Phonesper1000</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arable-percent]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Arable-percent</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crops-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crops-percent]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Crops-percent</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other-percent]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Other-percent</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Climate]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Climate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birthrate]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Birthrate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deathrate]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Deathrate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Agriculture]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Agriculture</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Sobriety checkpoints - Copy.reformatted#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='string' hidden='true' name='[F3]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42133.885408796297'>
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.42129.002204050928'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.42129.004219398150'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42133.885408796297' target='textscan.42129.002204050928'>
      <column-mapping>
        <map key='[textscan.42129.002204050928].[none:Country:nk]' value='[oracle.42133.885408796297].[none:COUNTRY:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42133.885408796297' target='textscan.42129.004219398150'>
      <column-mapping>
        <map key='[oracle.42133.885408796297].[none:COUNTRY:nk]' value='[textscan.42129.004219398150].[none:Country:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='High LR'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sobriety checkpoints - Copy.reformatted' name='textscan.42129.004219398150' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.004219398150'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[LiteracyPercent]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[LiteracyPercent]' derivation='Sum' name='[sum:LiteracyPercent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>5</min>
            <max>8</max>
          </filter>
          <filter class='categorical' column='[textscan.42129.004219398150].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42129.004219398150].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
            <column>[textscan.42129.004219398150].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.004219398150].[none:Country:nk]</rows>
        <cols>[textscan.42129.004219398150].[sum:LiteracyPercent:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Least Young drivers STRICT'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Young novice drivers' datatype='real' name='[Young_novice_drivers]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Young_novice_drivers]' derivation='Sum' name='[sum:Young_novice_drivers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>0.14999999999999999</max>
          </filter>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>5</min>
            <max>8</max>
          </filter>
          <slices>
            <column>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</column>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' num-steps='4' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[none:Country:nk]</rows>
        <cols>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Least young drivers LENIENT'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Young novice drivers' datatype='real' name='[Young_novice_drivers]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Young_novice_drivers]' derivation='Sum' name='[sum:Young_novice_drivers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>0.14999999999999999</max>
          </filter>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>0</min>
            <max>2</max>
          </filter>
          <slices>
            <column>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</column>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' num-steps='3' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[none:Country:nk]</rows>
        <cols>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Low LR'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sobriety checkpoints - Copy.reformatted' name='textscan.42129.004219398150' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.004219398150'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column datatype='real' name='[LiteracyPercent]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[LiteracyPercent]' derivation='Sum' name='[sum:LiteracyPercent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>0</min>
            <max>2</max>
          </filter>
          <filter class='categorical' column='[textscan.42129.004219398150].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42129.004219398150].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
            <column>[textscan.42129.004219398150].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.004219398150].[none:Country:nk]</rows>
        <cols>[textscan.42129.004219398150].[sum:LiteracyPercent:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Most young drivers LENIENT'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Young novice drivers' datatype='real' name='[Young_novice_drivers]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Young_novice_drivers]' derivation='Sum' name='[sum:Young_novice_drivers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>0</min>
            <max>2</max>
          </filter>
          <slices>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' num-steps='3' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[none:Country:nk]</rows>
        <cols>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Most young drivers STRICT'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Young novice drivers' datatype='real' name='[Young_novice_drivers]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Young_novice_drivers]' derivation='Sum' name='[sum:Young_novice_drivers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]' included-values='in-range'>
            <min>0.01</min>
            <max>0.14999999999999999</max>
          </filter>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>5</min>
            <max>8</max>
          </filter>
          <slices>
            <column>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</column>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' num-steps='4' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[none:Country:nk]</rows>
        <cols>[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
            <datasource caption='Sobriety checkpoints - Copy.reformatted' name='textscan.42129.004219398150' />
          </datasources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column caption='Population of adults' datatype='real' name='[Calculation_3530509223025766]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) - SUM([textscan.42129.004219398150].[Population])* SUM([Young_novice_drivers])' scope-isolation='false' />
            </column>
            <column caption='Population of young drivers' datatype='real' name='[Calculation_7170509222017039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) * SUM([Young_novice_drivers])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3530509223025766]' derivation='User' name='[usr:Calculation_3530509223025766:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7170509222017039]' derivation='User' name='[usr:Calculation_7170509222017039:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42129.002204050928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42129.002204050928].[usr:Calculation_3530509223025766:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42129.002204050928].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>0</min>
            <max>2</max>
          </filter>
          <slices>
            <column>[textscan.42129.002204050928].[:Measure Names]</column>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
            <column>[textscan.42129.002204050928].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002204050928].[:Measure Names]' />
              <text column='[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[Multiple Values]</rows>
        <cols>[textscan.42129.002204050928].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Legal-BAC-limits - Copy.reformatted' name='textscan.42129.002204050928' />
            <datasource caption='Penalties for drink driving - Copy.reformatted' name='textscan.42129.002431342589' />
            <datasource caption='Sobriety checkpoints - Copy.reformatted' name='textscan.42129.004219398150' />
          </datasources>
          <datasource-dependencies datasource='textscan.42129.002204050928'>
            <column caption='Population of adults' datatype='real' name='[Calculation_3530509223025766]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) - SUM([textscan.42129.004219398150].[Population])* SUM([Young_novice_drivers])' scope-isolation='false' />
            </column>
            <column caption='Population of young drivers' datatype='real' name='[Calculation_7170509222017039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([textscan.42129.004219398150].[Population]) * SUM([Young_novice_drivers])' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3530509223025766]' derivation='User' name='[usr:Calculation_3530509223025766:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7170509222017039]' derivation='User' name='[usr:Calculation_7170509222017039:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42129.002431342589'>
            <column caption='Count yes' datatype='integer' name='[Calculation_7330509205248808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(zn(IF [Community_service] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Detention_short_or_long_term] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Fines] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Ignition_interlocks_alcolocks_] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [License_suspended_revoked] = &apos;Yes&apos; Then 1 END)+&#13;&#10;zn(IF [Mandatory_treatment] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Penalty_points] = &apos;Yes&apos; Then 1 END) +&#13;&#10;zn(IF [Vehicle_impounded] = &apos;Yes&apos; Then 1 END))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7330509205248808]' derivation='User' name='[usr:Calculation_7330509205248808:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42129.002204050928].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42129.002204050928].[usr:Calculation_3530509223025766:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42129.002204050928].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42129.002204050928].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;The former Yugoslav republic of Macedonia&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Cte dIvoire&quot;</bucket>
              <bucket>&quot;Democratic Peoples Republic of Korea&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Lao Peoples Democratic Republic&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' included-values='in-range'>
            <min>6</min>
            <max>8</max>
          </filter>
          <slices>
            <column>[textscan.42129.002204050928].[:Measure Names]</column>
            <column>[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]</column>
            <column>[textscan.42129.002204050928].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42129.002204050928].[:Measure Names]' />
              <text column='[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42129.002204050928].[Multiple Values]</rows>
        <cols>[textscan.42129.002204050928].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Are illiterate countries more lenient?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5000' id='8' type='title' w='100000' x='0' y='0'>
            </zone>
            <zone h='95000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5000'>
              <zone h='95000' id='3' type='layout-basic' w='99600' x='0' y='5000'>
                <zone h='37288' id='1' name='Low LR' show-title='true' w='99600' x='0' y='5000'>
                </zone>
                <zone h='57712' id='7' name='High LR' show-title='true' w='99600' x='0' y='42288'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Least young drivers LENIENT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]' show-null-ctrls='false' type='filter' />
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.42129.002431342589].[none:Fines:nk]'>
        <color-one-way>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Mandatory_treatment:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
          <field>[textscan.42129.004219398150].[none:Sobriety_checkpoints:nk]</field>
          <field>[textscan.42129.004219398150].[none:Year:qk]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;No&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Least Young drivers STRICT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002204050928].[sum:Young_novice_drivers:qk]' show-null-ctrls='false' type='filter' />
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.42129.002431342589].[none:Fines:nk]'>
        <color-one-way>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Mandatory_treatment:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
          <field>[textscan.42129.004219398150].[none:Sobriety_checkpoints:nk]</field>
          <field>[textscan.42129.004219398150].[none:Year:qk]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;No&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Most young drivers LENIENT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.42129.002431342589].[none:Fines:nk]'>
        <color-one-way>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Mandatory_treatment:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
          <field>[textscan.42129.004219398150].[none:Sobriety_checkpoints:nk]</field>
          <field>[textscan.42129.004219398150].[none:Year:qk]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;No&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Most young drivers STRICT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.42129.002431342589].[none:Fines:nk]'>
        <color-one-way>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Mandatory_treatment:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
          <field>[textscan.42129.004219398150].[none:Sobriety_checkpoints:nk]</field>
          <field>[textscan.42129.004219398150].[none:Year:qk]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;No&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Low LR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42133.885408796297].[none:COUNTRY:nk]</field>
          <field>[oracle.42133.885408796297].[none:REGION:nk]</field>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Fines:nk]</field>
          <field>[textscan.42129.002431342589].[none:Penalty_points:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='High LR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42133.885408796297].[none:COUNTRY:nk]</field>
          <field>[oracle.42133.885408796297].[none:REGION:nk]</field>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Country:nk]</field>
          <field>[textscan.42129.002431342589].[none:Fines:nk]</field>
          <field>[textscan.42129.002431342589].[none:Penalty_points:nk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Czech Republic&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <fields>
                <field>[textscan.42129.004219398150].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <active id='8' />
      <zones>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='11' param='[textscan.42129.002204050928].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42129.002204050928].[:Measure Names]</field>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002204050928].[sum:General_population:qk]</field>
          <field>[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
          <oriented-node-reference orientation='horizontal'>
            <node-reference>
              <fields>
                <field>[textscan.42129.002204050928].[none:Country:nk]</field>
              </fields>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
              </multibucket>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='11' param='[textscan.42129.002204050928].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42129.002431342589].[usr:Calculation_7330509205248808:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42129.002204050928].[:Measure Names]</field>
          <field>[textscan.42129.002204050928].[none:Country:nk]</field>
          <field>[textscan.42129.002204050928].[sum:General_population:qk]</field>
          <field>[textscan.42129.002204050928].[usr:Calculation_7170509222017039:qk]</field>
          <field>[textscan.42129.004219398150].[none:Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Least young drivers LENIENT' width='192'>
      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
      +P+JbmsDUmbKEgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Least Young drivers STRICT' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Most young drivers LENIENT' width='192'>
      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
      SgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most young drivers STRICT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3daZNc133f8e+9vS/T09Pd090z07NvAAYYEOAibuImUqQVyXFRjmJbsSsp
      K+U8SzmvwI9S5UpVnsRlZ3GUqrhiWynJsmhRFAVSoQhwwTIbBsDs+3RPr9P73vfePAAHNETQ
      3ED0bfT5VKGAGjT6/s/U/HCWPvdcSdM0DUFoU3KzCxCEZhIBENqaCIDQ1kQAhLYmAiC0NREA
      oa2JAAhtTQRAaGsiAEJbMx79QVVV8vl8M2u5Z2q1GmazudllCDogteNWiEwqhRyPNrsMQQeM
      n/wS/armk1ycWcTo8DDgMSF1DdPnsX3iv9NUlWo8dg8qFPSupQPw9muvMfnSt5EyceLrs1x9
      d56+sRNoyU1yRg+OcoxSXWPs1Ek2Fubwn3qGJ0/2N7tsQUdaehJsMRnIZTL89Mc/JJKtM/3g
      NPvLN0jmSkTC+xSqGhO9nayurlNXauxFks0uWdCZlp4DqI0K8zMzqDYPAz47ss1FOpUhfxhD
      tbrxOkx0Oszk6yqRyAHdgUHGhnpIJxI0biw2u3xBB1o6AJ9XOplE21xrdhmCDrRlALLZLJ2d
      nc0uQ9CBlp4Ef16aqlJNJppdhqADugtAOXdIuiLRZdXIVGV6ut23/q5SyNAwOnFav1jZWqNB
      TswBBHQYgO25t/irixme6q+xVOvla1M+FHuQLjnH/MwlvCefQ0vvMzg5RWxzibrRwXCwk5Xt
      GCcn+5m/vs2Zh06zdf0qrt4xyO2RVhzYG1lkdx9T44PNbqKgI7oLAIDDXGMpVsPly7OxVSF8
      uESHzcbpgW52wlsUUntshfdxdR+jElugng2wtraKpjW48v47KGqBhqmPkKXO5ZUtNg8OcZpk
      vvNHjyE1u3GCruguAE5PgMcf9NNoyKj1HKVckd5gPz2dKjvpHB1dRhqVLpxdbvbWr1Nt1OgJ
      gMffh8NmZuLESUKDE+ytLrG6XUaTZPp6erHbrVhk8eMv3K5lV4GUepmZS5cwdYU4fXyUz/Kz
      LT4HEI60bAC+iGwmg8NoaHYZgg7obgh0T0gSRmdHs6sQdKAte4CbQ6BrzS5D0AHd9gDl9D4/
      fOVNBo4/zIOTQSqqkVxkE2ffKNTKWM0Sb7+7wIsvPc/8+dcInnyGfreBTKmOpDSwWgxkCjXk
      coqyzY9VKdPh6cZmPhr6tF3uhTvQbQAMZhtmGax2G5fPn+PKcprjw06U1RUaJgdKQyIZT6Fq
      UK2UaagqZPb4wVubWFIRXF02unsHsNSyZExJDhbfp2PqRV5+6kSzmyboiG63Q9erZTo8PlZu
      XGFpLYLNqFJXAIwMDQ9hMJqwyiqKBihVrs3PsJ2tU0/skSk1MBslcrkCiqKR3N+karRSKRSb
      2yhBd3Q7B9A0jVqtisFgQlUbaJqELEtI0s1fmqahKgpGswVNqVOrNzCaTGiKApKM0SBRa6iY
      jDKaBg1FwWAwYjIaxDKocItuA/BlyhweYspmml2GoAO6nQN8mSSDAcfwSLPLEHSgLQOglUtk
      //Z/NrsMQQduC8Dq3BzBE2NcX9jisUemASjnE6TyKrV6g5HBvluvrWXCLCcNTA93MXN1Fb+t
      QUbqpMPhYCgUuOPFbszPMHTyQeyfGDuVS2//isHpr+A2lrl05SpYXDzyyFksho/ueaiV0kQz
      KgO9Xi796nXyDQN9Y9McG/STS0SoWj10d1hvvV6r16hduvApv0XC/ey2H8Xd1RU6xntZvLFG
      bv8a+YZGaGSUZCTOyl6es6N2IjmNEb+dWDxOo/ss00NOZi68QUFy8Ye/8xLvL6zy3ttvoGHi
      2KifnWgSiyNAMREhlUxSrJbY20/gCwbZ3dqkXFex2zv49sv/nOzeNd65uo7D5eXqzFW+9+AT
      vPf6L+h/+puYC0m2597i4r6GX0qSrlo4MRZg4eoqQ0NdLB1Y+aPffYG1lWU6/D1cX7rGe6+t
      Mz42iGvy4dsCIAhHblsGNZs0SoUaZquVQknh+LCXg2gK1exksL+H1eVVnHYLmxsHHDsxemtr
      cUMz47PU2E9kyOZyNIxOum2wurXL2Ngg+egORWsPPpeVjZVtHnhokqXryzg9QVTZiMNQpaGo
      RLbWGT75ENHwHoGeXrocZqwWA7lslnM//TvWdmOERgZYXw3jtMrsbO2hVnMoVhcDvb0AWDu8
      PPnE46Tje2D10O2AdCJGOHrA9l78Xn9/BZ27bRWoXspwefYawyceoJqO4e60ki2rGIxWEgdh
      Al478aKB0YCNpY19/P3jDAWcbOxECHntrIcPsdsdqKqKTVaI7y/z5swyx049x0hXlbLkYHw4
      yOLiGsenJsgXKpQrFWxGiZ7+QaRGibnZBYamzpBLxBkdHUJTalydnaFudjMccFIze1EzO6Tq
      dgK2KlsHaQaGR4lGE5ydPs7KwiWi2Sqjx49Tzhbwu0zkqgqS0UitbmBkIEB6b4f6n/xxM7/v
      gk58qcugjXqFXL6M0+XCrKPdl+nwPupf/GmzyxB0oC0/BxCnQghH2nMZVFWpJsR8QNB7ADSV
      g70dcuUaXV4vJrODLteHh9+m41Hs3iCWfzS6ikej+ILBf3KT081TIcR2aEHvAUDC5rDx81df
      4cxXn0GraczmMhglIwark8zqu6i9p3hgapLY5jJ2/wgXfvK/mXj0ObqdNuxOEzXNRq1cJJ9O
      MnD8Qfq7xY0wwod0HQANiCxfIfjAi4Tsed5Z2qbQ0UV244Cgs05dljje6+b1c7/EbYbMVhqD
      tQNr6YAb4SLr4QSWch2PvxPV5qZu26e/+3izmyXoiL4DoNS4thWnO9TBQd5OoKcHT4ebgmbF
      Y61T1QrsbO5xemqcyPYePd5uVGOGZM3KM889guGdFawkOTX9AHNzi3h9vmY3SdCZtlwFEtuh
      hSNtGYBsJoPDpOvOT7hH2vOnQJIwOpzNrkLQgbbsAcQQSDii23uCP049u8uf/qc/J1dTyBym
      iEbj1GtVwtub/PjV1ynm0kQTh5QKWSKxJMlYhMNMlmgkTKnWaHb5gs602BBI49rly3T77dzY
      2mfprXN0u0xoHW4kq4tMrsA//OQV3E4b6XwW2/DjxK+8yuNff57Z8+dxHH+ebz891exGCDrS
      Uj2Apja4vh3n+Gg/1+cXMDlc9PvdaLKRfDaLqkmYZJVcpYHFbKKntxervROplKQsm6kWxakQ
      wu1aag6gaRqKomIwyCiKiiRx854ESUJRFCRZRkZD0cAgSSDJaKqCLMs0FAVZNmAwyGIOINzS
      UgG4WzKHh5hy2WaXIehAi80B7g7JYMAxNNzsMgQdaM8eIJVCikaaXYagAy3RA1SyUX41t83X
      n3n0Ex9xpNaKbO4nkSWJkeGBO75GU1Xq4imRAi0SgJW5y1y/usfU9Cl++cPvMzQ+STxTAmsn
      9lKYrObGRY6iotDT28/M9W36Q70sXXmHckNjdPoU63NX8E9/jaen7xwKoT3pfxlUU5i7sU6/
      z8rc1VVUgxObWqZ/dIRyPs7aRhKXzUixoHJiIkhJMdPb10O5kKfUkJgMdbG6so4maUSiqWa3
      RtAZ/c8BlDJr2ylG+r1sh+OgNLDU4vzNa5cYnDrLY6NdFI0enFoVp9tKRbMR39vC4vJilVU6
      7WYKDZVI+ABfYODmqRBiGVT4gP4DcAdqo06+UMLqcGIxffbTJtLJJNrWxpdQmdBqWjIAX5Q4
      FUI40hKT4LtNq9epiLNBBVotAJrK/s4G+bJKaGiEDpsJgGQsRlcggAFoVItkyio+98ff/K6V
      i+T+23++R0ULetZaAVAV3nzjTQb7A2wly/SYCxjc/axdOs/UI6eIHSTpDobIFYpEbB00annM
      WpVEuozRJNM3cZaRoKvZrRB0pLUCAEiyjMvlZmNlhrW8xvBYHQWFCxcXeXLCzepOhHwuiSQ5
      qeQP6LQY6LDbMHo8XLy6wUjwTLObIOhIawVAkgl2ezjMVZk++xjpvXVsXh8Gm0wyusXc6h7u
      4UcY8XaRPtihbOmhr8uG3WrB4uxAq9ib3QJBZ+6bVaDI5g3WwlkeevQrOEz/9Od74nRo4ch9
      E4DPIps+xFEpN7sMQQdaawh0t8gGDP5gs6sQdKAtA6DmMiT+w79pdhmCDtwXAVAqOV57/U0k
      2chAv5/NhMqTj5zCSo1sWcXbaSWxeZVLiQ5efuZUs8sVdOS+CEA2sY3mHOabX3uAxMYV5pYj
      /ORnUY77zbwzv85Yvw9fdxfVuu2T30xoK/rfDv0pdHhD1A7X+PnPXiWSKdPd149Za7C6toHZ
      YkCWZVKpdLPLFHToPlkF0lBVDU0DWZbQAD5o1s2vgapqSJKMLEtiGVS45T4JwGeTiccwXTrf
      7DIEHWjLAIjt0MKR+2IS/FkpuRzr/14MgQRdB0Bjd+UqG/sJQsfOMt7nue1vG9U8Owd5Rod6
      b31tb+kK18MF7E43w34X/pERLHd4Z7VaI/Paz7/k+oVWoN8A1PL8anaD3/3tf0apVOTVH/+I
      UkNiIOhgZjnOw6d7ubCQ42xIZTtt4Hd/77dI7q/R0fcUO1fephxzEE/vs7l7yMTYCMtzlwmc
      fp5nTg82u2WCjuh3GVQ2YtQalMt5YgdhEhUzfnOJZElGKccpYWMw2Ek4WqCQiFH/YCYT3Vyk
      avNRz+XY2glz6uwDlOJhkCUOYofNbZOgO/rtAYx2fvM3nmbx+gbHHjjLi1YziaqFr/Q66fb6
      OHFignXrNrbBTqqyA5MKQ6ceZ8TdTya8jqKNEehxc31pm8kHzmLq2sfX3dfsVgk605arQKnt
      baJ/+G+bXYagA20ZALEMKhzR7xDoS6RWqqTO/ajZZQg60DI9QKNaYG1tG0unj+FQAEn6pGNy
      P1TJH1LUbHhdNzfDJdc32H7iq19WqUILaZkeoJDe4dp6ii5tkULlUdLhHcaPjbO0uIKl04tD
      y5Eq1DAbJAYmT5LYWsLUNUjp4AalXIak7OXkydOcHBE3wggfapkAAFgdLvzGJBfeOIezy43Z
      JrOf1rCHFyhJCkFXg6r3OLPzi6i5JKm1BOZSnMceHuVH/+sXnHnsqWY3QdCZlgmAyeqikZ3j
      wN3Nb754nNlrG/gDvTSkOuaKiTLgtdWRXX5y2RzJWpF+rw+b6sLlCfKvv/dd4tvbTHQfb3ZT
      BB1pmTnA3STmAMKRtgxA5vAQazbX7DIEHWiZIdDdJBkMWAbFk2KENu0BxAMyhCM67QFy/OWf
      /S3jp0/gNZVJu6b56oluzv3ob0lKLr7x0rNkEyl85gKvzOd46clTKLUqRuoUG0Y8HSYiK3Nc
      K3bz2KgLydaJVCvQkK34fV3NbpygIzoNgEatWkOWJIwGiYaiAhK9oSCxnQKx7RUuvPU2odEJ
      qiWNV1/5B2RrB0F7jdnVCBN9Hro8LrKJBL9IujAUYqRTGV767h80u2GCzug0AGaGR/pRVRWs
      bgJuGyDR3ROiO7tDva7iGxjB5/Hh7PVjza3jGjzFztWLTB6bZCToJp3JMTo+iFY4RO6bIpDL
      0+fr/MTHrArtRcwBhLbWlgHIZjI4beKQLEG3Q6AvnyTr92Y44d5pywCo9Tqpd8W5QEJLB0Dh
      r7//l/SNHqNvaBxDo0wmEaOqFMjJfYz7Lbi6PKTTOUKhAJHdPXyhYVwfPFhPEKClAwCKqt78
      vRjlrZk9hm15qg47dUOccytJ+m0Ftg6LjB07RXLzOqaRr/IvnhWnQwsfaukAGAw3nxJfLJbp
      9Hixa1XMbjc74SydXT78TjMZkwebkqegynRWq02uWNCbtlwFEsugwpG2DEDm8BBLudjsMgQd
      aOkh0OclGQzY+vqbXYagA23ZA6RTKaT93WaXIehAS/YAqb0bvLOwz+DYBJ1mjYGRYWTgcGeR
      mGGA46GPnvmjZve5uKvw2KlBUFXqGfHEGKFFA1BKx4hlSkw5HSxcPM+lC+eoSSYGenzkTWVm
      zi3gGX2IxMp7YHEx2usmlc5Q6py6GQBB+EDL7geYOPUwI31eKuUymmRnYthHtlAlHdujYbRw
      mEpjcfnxdxgJH6QYGhJjfuGjWrIH8A1NY8cBSHz12WcAsNuMDNZUNNlIKh6nw+PDKKmYJA2z
      xUzkIM7TQ+JwXOF2bToJTiLtiUmw0KYBEIfjCkdacgj0RTXKFZZ+8NNmlyHoQMv2AI1agcWF
      JQxOD1PHRjF8hnsdo2ubvDr94pdXnNAyWrYHqOQjzCxs8+yL/bx37hVc/RNkwtt0hkZJ7m6j
      yDZOT/qZW97j2OQY22urhI49xFifOBVC+FDLLoMC2BwduDscbG2G6XbBQTzKlZl59lMVKuFN
      3ro4w+T0ScLX3mctkmQ/Emt2yYLOtGwPYLS4OD41gdfdwdix41jMVpxuPwGXG4ulA3vdh7vX
      zfX5BUZHT9OvrdHbG2h22YLOtOwc4IsQcwDhSFsGIJNOY2mozS5D0IGWHQJ9EZIkYensaHYZ
      gg60ZQDUep3UexeaXYagAy0dgCs//z8YTvwmnvoBtq4gjUIK1Wijlo/z1pUNvv3ioyQKKl6n
      gWQ6TyA0JE6FEG7T0gHQNJXY+gy7iplc5CLZYoGnzw6zW3TRqFe5NjfD5eubjPR24fL4mN+v
      iFMhhNu07OcAi++9wWKkzshgD8XUPqYOD86OToLBHjLxfRQNdnb3MFnMSEYzob5eaL/5vvAJ
      2nIVSJwKIRxpywBk0odYSqVmlyHoQEvPAT4vSTZg6ws1uwxBB9qyBxA3xAhHfq0HKPBX/+PH
      vPBbL/DGT97gkReeZKBvAKvxs82V6/kk0bKJfv+HN52sLM4hobC0n2Z88gQnRj68PTG8fJma
      9xTD3daPvJdSSrESqXJirPfW16LrV8k5BpkIuph///+xn4VHTo9SktwMBTsBhcXFFU6dOnHn
      AlWNejbzmdok3J9+LQA11hZnsXnsLNzYwBpwEN1eJp4oMRh0cHG9yjF/g2yxTk+wm/n1CHZr
      Bz45w9YhnJ1wc/HGAd985gwr8Qbnd29g7X+Al59/mKuL1zk+6CNVqHPaWOP7f/FnSJ5Buo1F
      cukDXIMlfra6wLGxUS6txnn+wWEuXbnK1NQo1/bKXPlViqLBy5C7QSaVYeipAOAiGtnD1jPN
      +twFwnKIi7EVKo4gh5vrpMLrLK7v8sy3fo9Tg56mfIMFffvIf+3BwVGWr60wMuCnXquSSKYZ
      nZjEoNboG52gnCsyMthNNJYkMHQCQ/WQyGGZ0aE+7M4OTPUS0eQhyYN9qpKF7Afn7zQaKrJs
      YOrMI4Q6IC856fO5yJQ0+gMeMrEDOnsGcNmMePpGKB1GsVkMGCwdeJxWsjUjg71esqUGoaAX
      AA3oHz1Bcn2OmrEDh1wjr5gpVap0B3soHiboHxmBQozN3R2W1sP39Jsr6N+vzQHq7O0lkWUN
      WVXAbKTDYWN3N0qo10dZs+EyVNgKpxgeCJKrglIpYTXUOawa6fNY2dqLMxgKkC/XyaQSWF0+
      hvr8/PJnP2HyzKM4Ot247Wb2NlcwdvZibeSIHuYJ9vUTD+/RF+olXVJwyWUiyTyBniCpZAa7
      qYFq9dAhl4kmCwQHhnDbzSSjuySLMNTTSTiepV4pYnG4sWhlTI5OEskMg71eSnWVhiLT4+8S
      y6DCLfdsEnx0GUlq/nMaxdGIwpG2XAUSp0IIR9rycwBNUSiH95pdhqADLReAci7BxkGBsR4n
      a9ESpyY++1mfmqJQWF/7EqoTWk3LBSCzt8T3//pdvvFwiPN7Elpmm3jJyJDfytZ+Et/AJLXE
      JjWbH7+pxO5hnclBD8urO4yffYJhv7gRRvhQS+4G7fU5ubiepsdVZ375gM5agkvz13AH/Mxf
      usxu+ICZmVlmr28wfWKU+UuXGD81wjtvzzS7dEFnWm4SnI2sshQp0KirgEaHXCJRNjIUsGN2
      +9nf3KeQT9EwdTLiM7KXqjE24GFtbY/xB2/2AGIZVDjScgG4G0QAhCNtGYBsJkOHw9HsMgQd
      aLlJ8F2haWjFfLOrEHSgLQOgFnKk/uSPm12GoAO6D8DCmz/gcr4bQ3yXM2cm6Js8RTISZWi4
      n/DWJp5AL8l4FLfHSyKWZHh8mMjONkZbJ2aDhs0oIzucxHZ2CAxN0GkXp0IIH9J9ANAguXWD
      es1Iz+4my9sRRo9NsruxysLsJSo4SVVlvnGmh/ffv8LCUj9ubx/7u7NYtCqDnTakvgEOblxF
      jip857npZrdI0BHdfw5gMJl59rlnkCUJk8mM3+dma2OTZPSAbE1C1lS6PB4Kh1E0ow2TxUYi
      sktVAa/TyHY0QzEdp6jJSI16s5sj6Mx9twpUTO3y1nuLuAJDfPXhqTu+Jr23Q13MAQTuwwB8
      GplEAsuNuWaXIehAWwZAbIcWjrRlANKpJOzuNLsMQQf0vwr0Kan1Cq/97KcgW3nw6ecJuj56
      wsSHL9Zo5LL3rjhBt+6bAGiqQjyVJ+SpMn/xPGs3rnH8xBQzS7sMe2SGhgZJGgf5xqNjzS5V
      0BHdL4N+FrJs4MSjXydkreINjeB2mnH3DNHjtpJIpqg3lGaXKOjMfTMH0FSFWOKQQKAbtV5m
      c2OX3v4+MsUaHqvGXjRFlz9Et9sudoMKt9w3Afgs0qkUkrgnWKBNAyCWQYUj980k+LPQFIWS
      OBdIoMUCUM5Emb2+ga9vhImhHv7xEVulXBrZ0YXVcOd/q9UL7MbLDPZ1oykKxY31e1KzoG8t
      FYD07g1KtmGu/PI1ag+eZO8gy/GJfhaX94iuLDB4+ix9fYNk80WM5STJVJXjD06wfn2V0bFe
      Ll3PM9jX3exmCDrSUgFA09i4scDDDz/GwtwMT58Jce7CDO7QFMP9QWxSkd39CAfhMBabk+5a
      mp09C/HwNnWzCfgnPhwT2lJLBcDuC/HsswEm+9x45BLXw1m+9tTDZGoOHN4xipKVQjjGxOQ4
      W9dn2c7WODt9HF9okB5/kJrX1uwmCDpzf64CaSq768ukGxZOHRtB/rUDecXnAMKR+zMAnyCb
      zYpTIQSgxYZAd42moTUaza5C0IF7EgBNU1FVDUmSkGSZj3tCgKapgIQkgare7Jhk+U7blbRb
      73fzOTESmvbB+3+K5w+o9TqHC7OfszXC/eSeBGDlwitcSjpRs3G+9VtfJxrL0d/tYD96iDcY
      olHKYjDA7rWL7BPkq4+M8vo/XGBkeJCpiT6ieYXx4X5QKqwsr+Hv6+Nv/vK/8tzv/DsM+++w
      WfFwsB/lOy+/wPbmPgPDIQ529+jq9pNIphkZDrGzvkFweBK3w3wvmiy0iHsyB1g+//e8s38z
      bbbKAbkGBHxd1J0DZOJh5HKeDgd02OyowRGiq8sYZAuSomI0S0xPTzM0PsnGuz8h1zXBxo01
      GpUCv//732Xz8qv89797j2/+3vdQt9/HNzrO7OIaimKjz5wmXGwwMDxOencVqf8xvvO1aTEJ
      Fm65J9uhjSYzDzz8FazU6PR46fD14+80E4vs4/YGsJsVkvk6JrOFxP4u7kAvVosFq82Gx2lk
      fWuPhqrhCfQSXluhuy9ER4cLk1HGYDTz23/wPXbm3sbh8bK2tktvT4Aur5feniDOrgAOqUJR
      M2BQxbhfuF3TVoEiq1fI2Mc4EXLf82uLHkA40pbLoJl0Gkul3OwyBB1oy2VQSZax9fR+8guF
      +15bBkAtFjj8L/+x2WUIOqC7AKzNXGBhP8ezLzyP1377kmUxuUskVycSLfD046c/+KrG63//
      f5l6+lvI8eusFd08dXac8OYm3SMjWO50EaVBY0s8JE/QYQCyh0mMdh/F8BKvz6xh7vBQiW7j
      8ZpRFcjKnRxs7bO2dI1/9YffhdQWm/tJqvNLOGKXiJlC/PnsLD6pRl9kjXCizLGxYWbP/5Lg
      Q9/iNx4Rp0IIH9JZADScgUGsa1e5cs1NZ08/6WgYTa1xmKkyOjyKrNnQFBuuSpSaprE6M4e7
      r5/tpUUeHfNgcAawdpqwRJc4TOcYGZskF9nG7HSRTouzgITb6SwAEv0DIbC5GRnqI7K7Q8eZ
      adRCglxVJdjtIZHKYJ3qwKjWsAODp5/gtM9PLhlFMhiRTVbqqoRcC+HodLCzG+PYY08RjCdw
      dYqbYYTbteUyaPoggvSD7ze7DEEH2jIA4lQI4YjOhkD3hqZpZLP3bj5Qr9cxGAwfs7P17qtW
      q1gsd1z/+lI0Gg0kScJg+JgTCb4Ed6uNbRkASZLuaQ9QKpUwmUyYTPfm+WT3uoerVCpIknRP
      Q3e32tiWAbDZ7u29wWaz+Z797w/3vn33Ktj/2N1q4311OO6nZTab0dQ60UiEUrUBmkb2MEEq
      U6BcyBKNJVG/4DXqlSIH0RgNVcMgQzIeI1+uojWqlGt395BeTdNIJ2Okc0Xg5lHxB7Ek9VqZ
      6EGUWuOLtuajCtlDYsnMzesrNeLxBLVGg0T04K63D6BWznMQS9BQNdAU0qkkxUoNTVMplkqf
      +33bsgcAiK9cZbOi0tjL8sSZQWbnF1AaEgaLhqVapvH4Nwk5P/nuso+zND9LmQapipmQIclK
      OEW9Fsar7lIJPcNXxjx3rS2Napb5hSUaCjzzwtPMz15BKdeJDQxAMcdussgjp0bv2vWgzuzl
      OSrlOo9/8yWiS/Mkyhr7kQOUapbqXoGnHx6/i9fTuD47S0lRKaln8dW2WYopaJtxjnVrvLdb
      5uXnH/9c79yWPQBA7rDK2PQJDLUiqlrF4Qrid5uoqBaOj/rJ5Gtf6P0rDZljx0ao5gqUCmVC
      o+NYpAYTExPI8ucP1p0ojRIdXQN4HQbqqooiWTk27MXiHqCrw8nwwN3e+FfDYPEw6neQr0G5
      ojA2OYkmmxgb7AelcJevBzXVyPhIiEq5TCFdYOj4NHJpn7cuXaWYPbx1C+1n1bYBCI0FuPSL
      8zi7u0nlGlSz+yTKFnqc8N5yhgHfF5vQ+bssvPf+DdydYOzysTJ7CZO7G9lsx2m5u6slZouH
      QmqZnOQgm0rhtmlcXEtT25/lysoupXLlrl4P7JhJsZxRkfMJ3F4Xl9+/TKfdxGrBhogAAAGM
      SURBVNzSHl2errt8PfB0Gpm5tkWnDUz+IIvn38DZc5KXX36ZqfEhPsWt4HfUlp8DCMKRtu0B
      BAFEAIQmq+SS7BykOAxvEit8sXkXaoOK8vHDvRvLywBkk3EK1Zv3h4shkNBUmqZw/col8gYn
      oQ6Va+th3HYTSvcpjKkZdvaKGDu7GHBBJFPm4cdfQAtf5t2tDN2BfmrpA7DacdpcmBpZXH6J
      +WWVJ6aDnHvzPYYfeJKnT/dx7hfnieRLBM0qksUJFisToS7RAwjNJUkG+gMOzO4QxWKJoaFB
      itUKpcMo+UIdd2AYf6eZimKkr9tFQ9NQG2WmHvwK1Uwau6cHo6ZhKu+TN3ZRzecYGBqimM8S
      GBzHZTeBUkF2dtPtdmC0eQj5Ogj2+HjrypboAYTma1QKlDQLDkOd9a09QkPDRHe2cXk9yJIJ
      WVI5WJvl7cUIv/0vfwenmqNhdlKv1ChlYhhcAVzGBorRhtlYY2c3xchgL9ubW/j7R3DZzcT2
      t8gpZjwOGxaTjMFiJV8o8f8B66gdMVX50EMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Low LR' width='192'>
      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
      +DNbWFE2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='High LR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      5xcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      VAAUT/v/M0u/7VDdrpkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='144' name='Sheet 9' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABmUlEQVR4nO3SQQ0AIBDAMMC/58MDH7KkVbDH9szMgpjzOwBeGJck45JkXJKMS5JxSTIu
      ScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45Jk
      XJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYl
      ybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKM
      S5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgk
      GZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5Jx
      STIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck
      45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuSRePYgUc7kJNEQAAAABJRU5ErkJg
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
